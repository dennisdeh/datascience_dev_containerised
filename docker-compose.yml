# Docker compose file for setting up a useful containerised data scientific
# development environment using jupyter, that has a database for storing data and
# information about various runs (db), an administration api (adminer) to access
#  the databases.
#
# A python module called database.py is included in .\c1_python\app\utils\
# and allows for easily saving to or loading from the database and to see the
# current data. A template workflow is found in main.ipynb
#
# Default usernames, passwords, tokens and ports are globally set in the .env file.
#
# To run: Navigate into the repository in the terminal and type:
#   docker compose up
# Then go to your browser and navigate to:
#   http://localhost:8888/lab (or modify to what port you set in .env)
# and enter the token you set in .env
#
# Images used are:
#   db: mariadb:latest
#   jupyter: jupyter/scipy-notebook:latest (see https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html for other images for R and Julia)
#   adminer: adminer:latest

version: '3.8'

services:
  # C0: databases
  db:
    container_name: database
    image: mariadb:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
    ports:
      - ${DB_PORT_HOST}:${DB_PORT_CONT}
    volumes:
      # bind-mount the sql files that should be run while initialising
      - ./c0_database/init:/docker-entrypoint-initdb.d
    healthcheck:  # define health-check that service is ready
      interval: 2s
      retries: 20
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized"
        ]
      timeout: 30s
  # C1: python api (jupyter)
  jupyter:
    container_name: c1_python
    image: quay.io/jupyter/scipy-notebook:latest
    depends_on:  # must only start once db is completely started (=container healthy)
      db:
        condition: service_healthy
    links:  # must be able to connect to db
      - db
    volumes:
      - ./c1_python/initialisation:/initialisation  # initialisation
      - ./c1_python/app:/home/jovyan  # working directory for jupyter
    environment:
      - DB_USER=${MARIADB_USER}   # = user for connecting to db (all permissions are granted for two tables)
      - DB_PASSWORD=${MARIADB_PASSWORD}
      - DB_HOST=db  # = service name
      - DB_PORT=${DB_PORT_CONT}   # = container exposed port
    # install packages and start jupyter
    command: /bin/bash -c "pip install -r /initialisation/requirements.txt &&\
      start-notebook.sh --IdentityProvider.token=${JUPYTER_TOKEN}"
    ports:
      - ${JUPYTER_PORT_HOST}:${JUPYTER_PORT_CONT}
  # CX: adminer
  adminer:
    container_name: adminer
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: db
    restart: always
    ports:
      - ${ADMINER_PORT_HOST}:${ADMINER_PORT_CONT}